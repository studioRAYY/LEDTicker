name: Build & Release (manual only, FFmpeg bundled)

on:
  workflow_dispatch:
    inputs:
      release:
        description: "Create GitHub Release from artifacts"
        required: false
        default: "false"
      tag:
        description: "Tag name for release (required if release=true)"
        required: false
        default: ""

permissions:
  contents: write

concurrency:
  group: manual-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            py: '3.11'
            add_data_sep: ':'
            artifact_suffix: macOS
          - os: windows-latest
            py: '3.11'
            add_data_sep: ';'
            artifact_suffix: Windows

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.6

      - name: Install FFmpeg (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ffmpeg
          which ffmpeg
          ffmpeg -version

      - name: Install FFmpeg (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ffmpeg -y
          where ffmpeg
          ffmpeg -version

      - name: Resolve FFmpeg path
        id: ff
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "macOS" ]; then
            echo "ff=$(which ffmpeg)" >> $GITHUB_OUTPUT
          else
            echo "ff=$(where ffmpeg | head -n 1 | tr -d '\r')" >> $GITHUB_OUTPUT
          fi

      - name: PyInstaller build
        shell: bash
        run: |
          SEP="${{ matrix.add_data_sep }}"
          pyinstaller \
            --name "StudioRayyTicker" \
            --windowed \
            --onefile \
            --noconfirm \
            --add-data "presets${SEP}presets" \
            --add-binary "${{ steps.ff.outputs.ff }}${SEP}ffmpeg" \
            main.py

      - name: Package artifact
        shell: bash
        run: |
          mkdir -p dist_pkg
          [ -f README.md ] && cp -f README.md dist_pkg/ || true
          if [ "${{ runner.os }}" = "macOS" ]; then
            cp -f dist/StudioRayyTicker dist_pkg/StudioRayyTicker-macOS
          else
            cp -f dist/StudioRayyTicker.exe dist_pkg/StudioRayyTicker-Windows.exe
          fi
          [ -d presets ] && cp -r presets dist_pkg/presets

      - uses: actions/upload-artifact@v4
        with:
          name: StudioRayyTicker-${{ matrix.artifact_suffix }}
          path: dist_pkg/

  release:
    if: ${{ github.event.inputs.release == 'true' }}
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Ensure tag provided
        if: ${{ github.event.inputs.tag == '' }}
        run: |
          echo "ERROR: You must provide a tag when release=true" >&2
          exit 1
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: |
            artifacts/StudioRayyTicker-Windows/**/*
            artifacts/StudioRayyTicker-macOS/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
